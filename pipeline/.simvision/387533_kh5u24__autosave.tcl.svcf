
#
# Preferences
#
preferences set toolbar-Standard-WatchWindow {
  usual
  shown 0
}
preferences set plugin-enable-svdatabrowser-new 1
preferences set toolbar-SimControl-WaveWindow {
  usual
  position -pos 0 -anchor e
}
preferences set cursorctl-dont-show-sync-warning 1
preferences set toolbar-CursorControl-WaveWindow {
  usual
  position -row 1
}
preferences set toolbar-Windows-WatchWindow {
  usual
  shown 0
}
preferences set toolbar-TimeSearch-WaveWindow {
  usual
  position -pos 2
}
preferences set waveform-print-paper {A4 (210mm x 297mm)}
preferences set exportdlg-file simvision.ps
preferences set toolbar-NavSignalList-WaveWindow {
  usual
  position -pos 1
}
preferences set toolbar-txe_waveform_toggle-WaveWindow {
  usual
  position -pos 1
}
preferences set plugin-enable-groupscope 0
preferences set plugin-enable-interleaveandcompare 0
preferences set plugin-enable-waveformfrequencyplot 0
preferences set toolbar-SimControl-WatchWindow {
  usual
  shown 0
}
preferences set toolbar-Windows-WaveWindow {
  usual
  position -pos 2
}
preferences set toolbar-WaveZoom-WaveWindow {
  usual
  position -pos 1
}
preferences set toolbar-TimeSearch-WatchWindow {
  usual
  shown 0
}

#
# Mnemonic Maps
#
mmap new  -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new  -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

#
# Design Browser windows
#
if {[catch {window new WatchList -name "Design Browser 1" -geometry 629x1500+628+15}] != ""} {
    window geometry "Design Browser 1" 629x1500+628+15
}
window target "Design Browser 1" on
browser using {Design Browser 1}
browser set -scope  simulator::core_stim.core_dut.branching0 
browser set \
    -signalsort name
browser yview see  simulator::core_stim.core_dut.branching0 
browser timecontrol set -lock 0

#
# Waveform windows
#
if {[catch {window new WaveWindow -name "Waveform 1" -geometry 1752x425+1284+15}] != ""} {
    window geometry "Waveform 1" 1752x425+1284+15
}
window target "Waveform 1" on
waveform using {Waveform 1}
waveform sidebar visibility partial
waveform set \
    -primarycursor TimeA \
    -signalnames name \
    -signalwidth 175 \
    -units ps \
    -valuewidth 75
waveform baseline set -time 0

set id [waveform add -signals  {
	simulator::core_stim.core_dut.regMem0.Clock
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.decoder0.opcode[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.progMem0.instruction[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.progCount0.PC[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.Clock
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.DEC_out
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.PC[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.Rmem
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.Wmem
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.Wreg
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.addr1[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.addr2[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.aluCode[3:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.aluImm_m
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.aluPC_m
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.aluin1_m
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.aluin2_m
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.flush
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.func3[2:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.imm[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.DEC0.nReset
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.rd[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.rs1[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.rs1_out[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.rs2[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.DEC0.rs2_out[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.EXE0.Clock
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.EXE0.EXE_out
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.EXE0.Rmem
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.EXE0.Wmem
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.EXE0.Wreg
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.EXE0.func3[2:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.EXE0.nReset
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.EXE0.rd[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.EXE0.result[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.EXE0.rs2[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.IF0.Clock
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.IF0.PC[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.IF0.PC_out[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.IF0.flush
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.IF0.hold
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.IF0.instruction[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.IF0.instruction_out[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.IF0.nReset
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.MEM0.Clock
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.MEM0.MEM_out
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.MEM0.Rmem
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.MEM0.Wreg
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.MEM0.memOut[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.MEM0.memOut_out[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.MEM0.nReset
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.MEM0.rd[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.MEM0.result[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.WdataMEM[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.WdataWB[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.forwarding0.WregEXE
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.forwarding0.WregMEM
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.forwarding0.WregWB
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.addr1DEC[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.addr2DEC[4:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.Clock
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.branching0.PCDEC[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.branching0.PCIF[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.branching0.aluOut[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.branchConfirmed
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.branching0.branchType[1:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.branching0.branchTypeEXE[1:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.branching_out
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.branching0.f3DEC[2:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.flush_internal
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.branching0.imm[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.branching0.immDEC[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.isBranchEXE
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.isLoad
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.nReset
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.negFlag
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.neguFlag
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.prediction
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.predictionReg
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.branching0.zeroFlag
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.alu0.PC[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.alu0.PC4[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.alu0.aluCode[3:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.alu0.aluImm_m
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.alu0.aluPC_m
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.alu0.aluPC_m_out[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.alu0.alu_out
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.alu0.aluin1_m
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.alu0.aluin1_m_out[31:0]}
	} ]
set id [waveform add -signals  {
	simulator::core_stim.core_dut.alu0.aluin2_m
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.alu0.aluin2_m_out[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.alu0.imm[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.alu0.rs1F[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.alu0.rs2F[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.rdEXE[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.rdMEM[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.rdWB[4:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.resultEXE[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.rs1DEC[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.regMem0.regs[0:31]}
	} ]
waveform hierarchy expand $id
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.rs1F[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.rs2DEC[31:0]}
	} ]
set id [waveform add -signals  {
	{simulator::core_stim.core_dut.forwarding0.rs2F[31:0]}
	} ]

waveform xview limits 0 100000000ps

#
# Waveform Window Links
#

#
# Memory Viewer windows
#
if {[catch {window new MemViewer -name "Memory Viewer 1" -geometry 700x1002+3049+282}] != ""} {
    window geometry "Memory Viewer 1" 700x1002+3049+282
}
window target "Memory Viewer 1" on
memviewer using {Memory Viewer 1}
memviewer set \
-primarycursor TimeA \
-units ps \
-radix default \
-addressradix default \
-addressorder MSBtoLSB

memviewer add  {simulator::core_stim.core_dut.dataMem0.mem[0:1023]} 

memviewer sidebar visibility partial

if {[catch {window new MemViewer -name "Memory Viewer 2" -geometry 2369x225+1275+1290}] != ""} {
    window geometry "Memory Viewer 2" 2369x225+1275+1290
}
memviewer using {Memory Viewer 2}
memviewer set \
-primarycursor TimeA \
-units ps \
-radix default \
-addressradix default \
-addressorder MSBtoLSB

memviewer add  {simulator::core_stim.core_dut.regMem0.regs[0:31]} 

memviewer sidebar visibility partial

#
# Register windows
#
if {[catch {window new RegisterWindow -name "Register 1" -geometry 1738x812+1276+469}] != ""} {
    window geometry "Register 1" 1738x812+1276+469
}
window target "Register 1" on
register using {Register 1}
register sidebar visibility partial
register set \
    -primarycursor TimeA \
    -units ps
register timecontrol set -lock 0

if { [lsearch [register pages] Page-1] == -1 } {
    set deletePage [register pages]
    register page new Page-1
    if { [llength $deletePage] == 1 } {
        register page delete $deletePage
    }
}
register addtype -page Page-1 -type signalname -x0 477.0 -y0 257.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.PC 
register addtype -page Page-1 -type signalvalue -x0 519.0 -y0 257.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.DEC0.DEC_out.PC 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 274.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.rd 
register addtype -page Page-1 -type signalvalue -x0 513.0 -y0 274.0 -fontsize regfont-12 -fill white -radix %d  simulator::core_stim.core_dut.DEC0.DEC_out.rd 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 292.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.addr1 
register addtype -page Page-1 -type signalvalue -x0 534.0 -y0 292.0 -fontsize regfont-12 -fill white -radix %d  simulator::core_stim.core_dut.DEC0.DEC_out.addr1 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 308.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.addr2 
register addtype -page Page-1 -type signalvalue -x0 534.0 -y0 308.0 -fontsize regfont-12 -fill white -radix %d  simulator::core_stim.core_dut.DEC0.DEC_out.addr2 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 325.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.aluCode 
register addtype -page Page-1 -type signalvalue -x0 549.0 -y0 325.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.DEC0.DEC_out.aluCode 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 342.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.imm 
register addtype -page Page-1 -type signalvalue -x0 523.0 -y0 342.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.DEC0.DEC_out.imm 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 359.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.Wmem 
register addtype -page Page-1 -type signalvalue -x0 538.0 -y0 359.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.DEC0.DEC_out.Wmem 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 376.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.Rmem 
register addtype -page Page-1 -type signalvalue -x0 535.0 -y0 376.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.DEC0.DEC_out.Rmem 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 393.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.Wreg 
register addtype -page Page-1 -type signalvalue -x0 531.0 -y0 393.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.DEC0.DEC_out.Wreg 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 410.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.func3 
register addtype -page Page-1 -type signalvalue -x0 533.0 -y0 410.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.DEC0.DEC_out.func3 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 427.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.aluin1_m 
register addtype -page Page-1 -type signalvalue -x0 552.0 -y0 427.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.DEC0.DEC_out.aluin1_m 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 444.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.aluin2_m 
register addtype -page Page-1 -type signalvalue -x0 552.0 -y0 444.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.DEC0.DEC_out.aluin2_m 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 461.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.aluPC_m 
register addtype -page Page-1 -type signalvalue -x0 552.0 -y0 461.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.DEC0.DEC_out.aluPC_m 
register addtype -page Page-1 -type signalname -x0 477.0 -y0 478.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.DEC0.DEC_out.aluImm_m 
register addtype -page Page-1 -type signalvalue -x0 556.0 -y0 478.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.DEC0.DEC_out.aluImm_m 
register addtype -page Page-1 -type signalname -x0 478.0 -y0 502.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.DEC0.rs1_out[31:0]} 
register addtype -page Page-1 -type signalvalue -x0 574.0 -y0 502.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.DEC0.rs1_out[31:0]} 
register addtype -page Page-1 -type signalname -x0 478.0 -y0 519.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.DEC0.rs2_out[31:0]} 
register addtype -page Page-1 -type signalvalue -x0 574.0 -y0 519.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.DEC0.rs2_out[31:0]} 
register addtype -page Page-1 -type signalname -x0 135.0 -y0 395.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.IF0.PC_out[31:0]} 
register addtype -page Page-1 -type signalvalue -x0 231.0 -y0 395.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.IF0.PC_out[31:0]} 
register addtype -page Page-1 -type signalname -x0 135.0 -y0 412.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.IF0.instruction_out[31:0]} 
register addtype -page Page-1 -type signalvalue -x0 271.0 -y0 412.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.IF0.instruction_out[31:0]} 
register addtype -page Page-1 -type signalname -x0 789.0 -y0 332.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.EXE0.EXE_out.rs2 
register addtype -page Page-1 -type signalvalue -x0 831.0 -y0 332.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.EXE0.EXE_out.rs2 
register addtype -page Page-1 -type signalname -x0 789.0 -y0 349.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.EXE0.EXE_out.rd 
register addtype -page Page-1 -type signalvalue -x0 825.0 -y0 349.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.EXE0.EXE_out.rd 
register addtype -page Page-1 -type signalname -x0 789.0 -y0 366.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.EXE0.EXE_out.result 
register addtype -page Page-1 -type signalvalue -x0 844.0 -y0 366.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.EXE0.EXE_out.result 
register addtype -page Page-1 -type signalname -x0 789.0 -y0 383.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.EXE0.EXE_out.Wmem 
register addtype -page Page-1 -type signalvalue -x0 850.0 -y0 383.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.EXE0.EXE_out.Wmem 
register addtype -page Page-1 -type signalname -x0 789.0 -y0 400.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.EXE0.EXE_out.Rmem 
register addtype -page Page-1 -type signalvalue -x0 847.0 -y0 400.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.EXE0.EXE_out.Rmem 
register addtype -page Page-1 -type signalname -x0 789.0 -y0 417.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.EXE0.EXE_out.Wreg 
register addtype -page Page-1 -type signalvalue -x0 843.0 -y0 417.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.EXE0.EXE_out.Wreg 
register addtype -page Page-1 -type signalname -x0 789.0 -y0 434.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.EXE0.EXE_out.func3 
register addtype -page Page-1 -type signalvalue -x0 845.0 -y0 434.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.EXE0.EXE_out.func3 
register addtype -page Page-1 -type signalname -x0 1051.0 -y0 364.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.MEM0.MEM_out.rd 
register addtype -page Page-1 -type signalvalue -x0 1087.0 -y0 364.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.MEM0.MEM_out.rd 
register addtype -page Page-1 -type signalname -x0 1051.0 -y0 381.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.MEM0.MEM_out.result 
register addtype -page Page-1 -type signalvalue -x0 1106.0 -y0 381.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.MEM0.MEM_out.result 
register addtype -page Page-1 -type signalname -x0 1051.0 -y0 398.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.MEM0.MEM_out.Wreg 
register addtype -page Page-1 -type signalvalue -x0 1105.0 -y0 398.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.MEM0.MEM_out.Wreg 
register addtype -page Page-1 -type signalname -x0 1051.0 -y0 415.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.MEM0.MEM_out.Rmem 
register addtype -page Page-1 -type signalvalue -x0 1109.0 -y0 415.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.MEM0.MEM_out.Rmem 
register addtype -page Page-1 -type text -text if -x0 138.0 -y0 208.0 -fill white -fontsize regfont-12
register addtype -page Page-1 -type text -text dec -x0 498.0 -y0 203.0 -fill white -fontsize regfont-12
register addtype -page Page-1 -type text -text exe -x0 820.0 -y0 219.0 -fill white -fontsize regfont-12
register addtype -page Page-1 -type text -text mem -x0 1069.0 -y0 233.0 -fill white -fontsize regfont-12
register addtype -page Page-1 -type signalname -x0 475.0 -y0 589.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.forwarding0.rs1F[31:0]} 
register addtype -page Page-1 -type signalvalue -x0 555.0 -y0 589.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.forwarding0.rs1F[31:0]} 
register addtype -page Page-1 -type signalname -x0 475.0 -y0 606.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.forwarding0.rs2F[31:0]} 
register addtype -page Page-1 -type signalvalue -x0 555.0 -y0 606.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.forwarding0.rs2F[31:0]} 
register addtype -page Page-1 -type signalname -x0 479.0 -y0 716.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.isLoad 
register addtype -page Page-1 -type signalvalue -x0 541.0 -y0 716.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.isLoad 
register addtype -page Page-1 -type signalname -x0 799.0 -y0 684.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.nReset 
register addtype -page Page-1 -type signalvalue -x0 862.0 -y0 684.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.nReset 
register addtype -page Page-1 -type signalname -x0 799.0 -y0 701.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.negFlag 
register addtype -page Page-1 -type signalvalue -x0 870.0 -y0 701.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.negFlag 
register addtype -page Page-1 -type signalname -x0 799.0 -y0 718.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.neguFlag 
register addtype -page Page-1 -type signalvalue -x0 877.0 -y0 718.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.neguFlag 
register addtype -page Page-1 -type signalname -x0 799.0 -y0 739.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.zeroFlag 
register addtype -page Page-1 -type signalvalue -x0 873.0 -y0 739.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.zeroFlag 
register addtype -page Page-1 -type signalname -x0 60.0 -y0 539.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.progCount0.PC[31:0]} 
register addtype -page Page-1 -type signalvalue -x0 132.0 -y0 539.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.progCount0.PC[31:0]} 
register addtype -page Page-1 -type signalname -x0 620.0 -y0 734.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.branching_out.flush 
register addtype -page Page-1 -type signalvalue -x0 671.0 -y0 734.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.branching_out.flush 
register addtype -page Page-1 -type signalname -x0 620.0 -y0 751.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.branching_out.hold 
register addtype -page Page-1 -type signalvalue -x0 669.0 -y0 751.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.branching_out.hold 
register addtype -page Page-1 -type signalname -x0 620.0 -y0 768.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.branching_out.PCnext 
register addtype -page Page-1 -type signalvalue -x0 685.0 -y0 768.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.branching0.branching_out.PCnext 
register addtype -page Page-1 -type signalname -x0 620.0 -y0 785.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.branching_out.PCcurrent 
register addtype -page Page-1 -type signalvalue -x0 701.0 -y0 785.0 -fontsize regfont-12 -fill white -radix {}  simulator::core_stim.core_dut.branching0.branching_out.PCcurrent 
register addtype -page Page-1 -type signalname -x0 620.0 -y0 802.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.branching_out.branch 
register addtype -page Page-1 -type signalvalue -x0 684.0 -y0 802.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.branching_out.branch 
register addtype -page Page-1 -type signalname -x0 619.0 -y0 822.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.branching_out.bypass 
register addtype -page Page-1 -type signalvalue -x0 684.0 -y0 822.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.branching_out.bypass 
register addtype -page Page-1 -type signalname -x0 400.0 -y0 783.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.prediction 
register addtype -page Page-1 -type signalvalue -x0 480.0 -y0 783.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.prediction 
register addtype -page Page-1 -type signalname -x0 791.0 -y0 491.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.isBranchEXE 
register addtype -page Page-1 -type signalvalue -x0 890.0 -y0 491.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.isBranchEXE 
register addtype -page Page-1 -type signalname -x0 605.0 -y0 699.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.branchConfirmed 
register addtype -page Page-1 -type signalvalue -x0 725.0 -y0 699.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.branchConfirmed 
register addtype -page Page-1 -type signalname -x0 1073.0 -y0 639.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.alu0.alu_out.result 
register addtype -page Page-1 -type signalvalue -x0 1128.0 -y0 639.0 -fontsize regfont-12 -fill white -radix %d  simulator::core_stim.core_dut.alu0.alu_out.result 
register addtype -page Page-1 -type signalname -x0 1072.0 -y0 674.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.alu0.aluin1_m_out[31:0]} 
register addtype -page Page-1 -type signalvalue -x0 1201.0 -y0 674.0 -fontsize regfont-12 -fill white -radix %d  {simulator::core_stim.core_dut.alu0.aluin1_m_out[31:0]} 
register addtype -page Page-1 -type signalname -x0 1076.0 -y0 702.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.alu0.aluin2_m_out[31:0]} 
register addtype -page Page-1 -type signalvalue -x0 1205.0 -y0 702.0 -fontsize regfont-12 -fill white -radix %d  {simulator::core_stim.core_dut.alu0.aluin2_m_out[31:0]} 
register addtype -page Page-1 -type signalname -x0 1070.0 -y0 571.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.alu0.aluCode[3:0]} 
register addtype -page Page-1 -type signalvalue -x0 1165.0 -y0 571.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.alu0.aluCode[3:0]} 
register addtype -page Page-1 -type signalname -x0 1080.0 -y0 728.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.alu0.alu_out.aluOut 
register addtype -page Page-1 -type signalvalue -x0 1142.0 -y0 728.0 -fontsize regfont-12 -fill white -radix %d  simulator::core_stim.core_dut.alu0.alu_out.aluOut 
register addtype -page Page-1 -type signalname -x0 231.0 -y0 681.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.predictionReg 
register addtype -page Page-1 -type signalvalue -x0 333.0 -y0 681.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.predictionReg 
register addtype -page Page-1 -type signalname -x0 72.0 -y0 750.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.branching0.branchType[1:0]} 
register addtype -page Page-1 -type signalvalue -x0 187.0 -y0 750.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.branching0.branchType[1:0]} 
register addtype -page Page-1 -type signalname -x0 64.0 -y0 772.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.branching0.branchTypeEXE[1:0]} 
register addtype -page Page-1 -type signalvalue -x0 204.0 -y0 772.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.branching0.branchTypeEXE[1:0]} 
register addtype -page Page-1 -type signalname -x0 135.0 -y0 808.0 -fontsize regfont-12 -fill white  simulator::core_stim.core_dut.branching0.isBranchEXE 
register addtype -page Page-1 -type signalvalue -x0 234.0 -y0 808.0 -fontsize regfont-12 -fill white -radix %b  simulator::core_stim.core_dut.branching0.isBranchEXE 
register addtype -page Page-1 -type signalname -x0 944.0 -y0 817.0 -fontsize regfont-12 -fill white  {simulator::core_stim.core_dut.branching0.PCDEC[31:0]} 
register addtype -page Page-1 -type signalvalue -x0 1042.0 -y0 817.0 -fontsize regfont-12 -fill white -radix {}  {simulator::core_stim.core_dut.branching0.PCDEC[31:0]} 
register select set 2 3
register invoke -using {Register 1} group
register select none
register select set 4 5
register invoke -using {Register 1} group
register select none
register select set 6 7
register invoke -using {Register 1} group
register select none
register select set 8 9
register invoke -using {Register 1} group
register select none
register select set 10 11
register invoke -using {Register 1} group
register select none
register select set 12 13
register invoke -using {Register 1} group
register select none
register select set 14 15
register invoke -using {Register 1} group
register select none
register select set 16 17
register invoke -using {Register 1} group
register select none
register select set 18 19
register invoke -using {Register 1} group
register select none
register select set 20 21
register invoke -using {Register 1} group
register select none
register select set 22 23
register invoke -using {Register 1} group
register select none
register select set 24 25
register invoke -using {Register 1} group
register select none
register select set 26 27
register invoke -using {Register 1} group
register select none
register select set 28 29
register invoke -using {Register 1} group
register select none
register select set 30 31
register invoke -using {Register 1} group
register select none
register select set 32 33
register invoke -using {Register 1} group
register select none
register select set 34 35
register invoke -using {Register 1} group
register select none
register select set 36 37
register invoke -using {Register 1} group
register select none
register select set 38 39
register invoke -using {Register 1} group
register select none
register select set 40 41
register invoke -using {Register 1} group
register select none
register select set 42 43
register invoke -using {Register 1} group
register select none
register select set 44 45
register invoke -using {Register 1} group
register select none
register select set 46 47
register invoke -using {Register 1} group
register select none
register select set 48 49
register invoke -using {Register 1} group
register select none
register select set 50 51
register invoke -using {Register 1} group
register select none
register select set 52 53
register invoke -using {Register 1} group
register select none
register select set 54 55
register invoke -using {Register 1} group
register select none
register select set 56 57
register invoke -using {Register 1} group
register select none
register select set 58 59
register invoke -using {Register 1} group
register select none
register select set 64 65
register invoke -using {Register 1} group
register select none
register select set 66 67
register invoke -using {Register 1} group
register select none
register select set 68 69
register invoke -using {Register 1} group
register select none
register select set 70 71
register invoke -using {Register 1} group
register select none
register select set 72 73
register invoke -using {Register 1} group
register select none
register select set 74 75
register invoke -using {Register 1} group
register select none
register select set 76 77
register invoke -using {Register 1} group
register select none
register select set 78 79
register invoke -using {Register 1} group
register select none
register select set 82 83
register invoke -using {Register 1} group
register select none
register select set 84 85
register invoke -using {Register 1} group
register select none
register select set 86 87
register invoke -using {Register 1} group
register select none
register select set 88 89
register invoke -using {Register 1} group
register select none
register select set 90 91
register invoke -using {Register 1} group
register select none
register select set 92 93
register invoke -using {Register 1} group
register select none
register select set 94 95
register invoke -using {Register 1} group
register select none
register select set 96 97
register invoke -using {Register 1} group
register select none
register select set 98 99
register invoke -using {Register 1} group
register select none
register select set 102 103
register invoke -using {Register 1} group
register select none
register select set 104 105
register invoke -using {Register 1} group
register select none
register select set 106 107
register invoke -using {Register 1} group
register select none
register select set 108 109
register invoke -using {Register 1} group
register select none
register select set 110 111
register invoke -using {Register 1} group
register select none
register select set 112 113
register invoke -using {Register 1} group
register select none
register select set 114 115
register invoke -using {Register 1} group
register select none
register select set 116 117
register invoke -using {Register 1} group
register select none
register select set 118 119
register invoke -using {Register 1} group
register select none
register select set 120 121
register invoke -using {Register 1} group
register select none
register set -page Page-1

#
# Console windows
#
console set -windowname Console
window geometry Console 730x250+1288+595

#
# Layout selection
#
