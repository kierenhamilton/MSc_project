// lui x10, 0x00000 (x10=0)
00010111
01000011
00000000
00000000

// lui x10, 0x12346 (x10=0x12346000)
00110111
01100101
00110100
00010010

// addi x10,x10,0x78 (x10=0x12345678)
00010011
00000101
10000101
00000111

// lui x11,0xABCDE (x11=0xABCDE000)
10110111
11100101
11011110
10101011

// addi x11,x11,1 (x11=0xABCDEF01)
10010011
10000101
00010101
00000000

// addi x12,x0,0 (x12=0)
00010011
00000110
00000000
00000000

// add x13,x10,x11 (x13=0x12345678+0xABCDEF01)
10110011
00000110
10110101
00000000

// sub x14,x11,x10 (x14=0xABCDEF01-0x12345678)
00110011
10000111
10110101
01000000

// and x15,x11,x10 (x15=0x12345678&0xABCDEF01)
10110011
11110111
11010101
00000000

// or x16,x11,x10 (x16=0x12345678|0xABCDEF01)
00110011
11101000
11010101
00000000

// xor x17,x11,x10 (x17=0x12345678^0xABCDEF01)
10110011
11001000
11010101
00000000

// bne x10,x11,_start (-12 offset)
01100011
01000101
10111011
11111011
